rfpipe:
  default:
    nthread: 2  # not taking all in case multiple workers going
    dtarr: [1]   # integer to integrate in time for independent searches
    maxdm: 100
    flagantsol: True
    timesub: 'mean'
    searchtype: 'image'
#    sigma_image1: 6.4
#    sigma_kalman: 0.
    npix_max: 2048
    badspwpol: 2.
    uvoversample: 1.5
    savenoise: True
    savecandcollection: True
    savecanddata: True
    returncanddata: True
    saveplots: True
    savesols: False
    selectpol: 'auto'
    fftmode: 'cuda'
    clustercands: !!python/tuple [2, 5]
    cluster_downsampling: 1
    memory_limit: 1 # in GB
  NRAOdefaultX:   # X-band 8-10 GHz, 16 spw, 2 MHz channels, 10 ms, 4 pols
    nthread: 2
    dtarr: [1,2,4,8]   # integer to integrate in time for independent searches
    maxdm: 3000
    flagantsol: True
    timesub: 'mean'
    searchtype: 'image'
#    sigma_image1: 6.8
#    sigma_kalman: 2.8
    npix_max: 2048
    badspwpol: 2.
    uvoversample: 1.5
    savenoise: False
    savecandcollection: True
    savecanddata: False
    returncanddata: True
    saveplots: True
    savesols: False
    selectpol: 'auto'
    fftmode: 'cuda'
    clustercands: !!python/tuple [2, 5]
    cluster_downsampling: 1
    memory_limit: 5.0 # in GB
  NRAOdefaultC:   # C-band 4-8 GHz, 16 spw, 2 MHz channels, 10 ms, 4 pols
    nthread: 2
    dtarr: [1,2,4,8]   # integer to integrate in time for independent searches
    maxdm: 3000
    flagantsol: True
    timesub: 'mean'
    searchtype: 'image'
#    sigma_image1: 7.0
#    sigma_kalman: 0.0  # snr1=7.5 and snrk=2.8 gives snrtot=8
    npix_max: 2048
    badspwpol: 2.
    uvoversample: 1.5
    savenoise: False
    savecandcollection: True
    savecanddata: False
    returncanddata: True
    saveplots: True
    savesols: False
    selectpol: 'auto'
    fftmode: 'cuda'
    clustercands: !!python/tuple [2, 5]
    cluster_downsampling: 1
    memory_limit: 5.0 # in GB
  NRAOdefaultS:   # S-band 2-4 GHz, 16 spw, 2 MHz channels, 10 ms, 4 pols
    nthread: 2
    dtarr: [1,2,4,8]   # integer to integrate in time for independent searches
    maxdm: 2000
    flagantsol: True
    timesub: 'mean'
    searchtype: 'image'
#    sigma_image1: 7.0
#    sigma_kalman: 0.0  # snr1=7.5 and snrk=2.8 gives snrtot=8
#    sigma_image1: 7.5
#    sigma_kalman: 2.8  # snr1=7.5 and snrk=2.8 gives snrtot=8
    npix_max: 2048
#    spw: [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
    spw: [4, 5, 6, 7, 8, 9, 10, 11, 12, 13]  # avoid low-level RFI
    badspwpol: 2.
    uvoversample: 1.5
    savenoise: False
    savecandcollection: True
    savecanddata: False
    returncanddata: True
    saveplots: True
    savesols: False
    selectpol: 'auto'
    fftmode: 'cuda'
    clustercands: !!python/tuple [2, 5]
    cluster_downsampling: 1
    memory_limit: 5.0 # in GB
  VLASS:   # S-band 2-4 GHz, 16 spw, 2 MHz channels, 18 ms, 4 pols
    nthread: 2
    dtarr: [1,2]   # integer to integrate in time for independent searches
    maxdm: 2000
    flagantsol: True
    #timesub: 'cs'
    timesub: 'splfit2'
    searchtype: 'image'
    sigma_image1: 8.0
#    sigma_kalman: 0.0  # snr1=7.5 and snrk=2.8 gives snrtot=8
#    sigma_image1: 7.5
#    sigma_kalman: 2.8  # snr1=7.5 and snrk=2.8 gives snrtot=8
    npix_max: 2048
#    spw: [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
    spw: [4, 5, 6, 7, 8, 9, 10, 11, 12, 13]  # avoid low-level RFI
    excludeants: !!python/tuple ['ea17',]
    badspwpol: 2.
    uvoversample: 1.5
    savenoise: False
    savecandcollection: True
    savecanddata: False
    returncanddata: True
    saveplots: True
    savesols: False
    selectpol: 'auto'
    fftmode: 'cuda'
    clustercands: !!python/tuple [2, 5]
    cluster_downsampling: 1
    memory_limit: 5.0 # in GB
  NRAOdefaultL:   # L-band 1-2 GHz, 16 spw, 1 MHz channels, 10 ms, 4 pols
    nthread: 2
    dtarr: [1,2,4,8]   # integer to integrate in time for independent searches
    maxdm: 1500
#    maxdm: 1000
    flagantsol: True
    timesub: 'mean'
    searchtype: 'image'
#    sigma_image1: 7.0
#    sigma_kalman: 0.0  # snr1=7.5 and snrk=2.8 gives snrtot=8
    npix_max: 2048
    spw: [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
    badspwpol: 2.
    uvoversample: 1.5
    savenoise: False
    savecandcollection: True
    savecanddata: False
    returncanddata: True
    saveplots: True
    savesols: False
    selectpol: 'auto'
    fftmode: 'cuda'
    clustercands: !!python/tuple [2, 5]
    cluster_downsampling: 1
    memory_limit: 5.0 # in GB
  20A-346:   # X-proposal, L-band 1-2 GHz, 8 spw, 20 ms
    nthread: 2
    dtarr: [1,2,4,8]   # integer to integrate in time for independent searches
    maxdm: 1500
#    maxdm: 1000
    flagantsol: True
    timesub: 'mean'
    searchtype: 'image'
#    sigma_image1: 7.0
#    sigma_kalman: 0.0  # snr1=7.5 and snrk=2.8 gives snrtot=8
    npix_max: 2048
#    spw: [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
    badspwpol: 2.
    uvoversample: 1.5
    savenoise: False
    savecandcollection: True
    savecanddata: False
    returncanddata: True
    saveplots: True
    savesols: False
    selectpol: 'auto'
    fftmode: 'cuda'
    clustercands: !!python/tuple [2, 5]
    cluster_downsampling: 1
    memory_limit: 5.0 # in GB
  NRAOdefaultP:
    nthread: 2
    dtarr: [1,2,4,8]   # integer to integrate in time for independent searches
    maxdm: 500
    flagantsol: True
    timesub: 'mean'
    searchtype: 'image'
#    sigma_image1: 7.0
#    sigma_kalman: 0.0  # snr1=7.5 and snrk=2.8 gives snrtot=8
    npix_max: 2048
#    spw: [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
    badspwpol: 2.
    uvoversample: 1.5
    savenoise: False
    savecandcollection: True
    savecanddata: False
    returncanddata: True
    saveplots: True
    savesols: False
    selectpol: 'auto'
    fftmode: 'cuda'
    clustercands: !!python/tuple [2, 5]
    cluster_downsampling: 1
    memory_limit: 5.0 # in GB

realfast:
  vys_timeout: 2 # fixed timeout factor relative to realtime reading
#  vys_sec_per_spec: !!float 3.0e-5  # timeout factor from time per spectrum
  searchintents: ['OBSERVE_TARGET']
  ignoreintents: ['CALIBRATE_FLUX', 'CALIBRATE_PHASE', 'CALIBRATE_AMPLI', 'CALIBRATE_POINTING']
  read_overhead: 3  # scale reader memory higher than nominal vismem requirement
  read_totfrac: 0.5  # require total of readers memories usage
  throttle: 0.7  # scale submission relative to realtime and conditional on cluster status
  requirecalibration: True  # must have calibration to submit
  mockprob: 0.0  # chance of injecting mock transient per scan
  indexprefix: 'new'  # save to production indices
  indexresults: True  # push info to elasticsearch indices
  createproducts: True  # save minisdm
  classify: True  # use fetch to classify and index results
  index_with_fetch: False  # use fetch workers to run indexcands_and_plots
  index_with_reader: True  # use reader to run indexcands_and_plots
# testing trigger
#  voevent: 0  # False, 'FRB', or DM value to select cands for voevent xml generation
#  voevent_snrtot: 6.6  # filter candidates based on snrtot
#  voevent_frbprobt: 0.00 # filter candidates based on frbprob
#  voevent_dt: 999  # filter on max width in seconds
# swift trigger
  voevent_destination: '3.13.26.235' # ip address or comment out to set to None
  voevent: 'FRB'  # False, 'FRB', or DM value to select cands for voevent xml generation
  voevent_snrtot: 9.0  # filter candidates based on snrtot
  voevent_frbprobt: 0.2  # filter candidates based on frbprob
  voevent_dt: 0.039  # filter on max width in seconds
